name: Quick Test

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'

jobs:
  quick-backend-test:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'asset-tag-backend/') || contains(github.event.head_commit.added, 'asset-tag-backend/') || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r asset-tag-backend/requirements-dev.txt
    
    - name: Run quick backend tests
      run: |
        cd asset-tag-backend
        python tests/run_tests.py unit

  quick-frontend-test:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'asset-tag-frontend/') || contains(github.event.head_commit.added, 'asset-tag-frontend/') || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: 'asset-tag-frontend/package-lock.json'

    - name: Install dependencies
      run: |
        npm ci --verbose
      working-directory: asset-tag-frontend

    - name: Run quick frontend tests
      run: npm run test:run
      working-directory: asset-tag-frontend

  # Auto-fix integration for quick tests
  auto-fix:
    needs: [quick-backend-test, quick-frontend-test]
    if: always() && (needs.quick-backend-test.result == 'failure' || needs.quick-frontend-test.result == 'failure')
    uses: ./.github/workflows/auto-fix-reusable.yml
    with:
      workflow-name: "Quick Test"
      workflow-conclusion: "failure"
      logs-content: |
        Quick Backend Test: ${{ needs.quick-backend-test.result }}
        Quick Frontend Test: ${{ needs.quick-frontend-test.result }}
      error-context: "Quick test workflow failed - check individual job results"
    permissions:
      contents: write
      issues: write
      pull-requests: write
    secrets: inherit
