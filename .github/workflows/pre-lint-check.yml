name: Pre-Lint Check and Auto-Fix

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Cancel outdated workflow runs to save resources
concurrency:
  group: pre-lint-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20.x'

jobs:
  # Detect which components have changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Detect changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - 'asset-tag-backend/**'
          frontend:
            - 'asset-tag-frontend/**'

  # Pre-lint verification and auto-fix
  pre-lint-verification:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      if: needs.changes.outputs.backend == 'true'
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      if: needs.changes.outputs.frontend == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        cache-dependency-path: 'asset-tag-frontend/package-lock.json'
    
    - name: Install Python dependencies
      if: needs.changes.outputs.backend == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r asset-tag-backend/requirements-dev.txt
        pip install bandit safety
    
    - name: Install Node.js dependencies
      if: needs.changes.outputs.frontend == 'true'
      run: |
        npm ci --workspace=asset-tag-frontend
      working-directory: .
    
    - name: Run lint verification
      id: lint-check
      run: |
        echo "üîç Running comprehensive lint verification..."
        
        # Make scripts executable
        chmod +x ./scripts/verify-lint-checks.sh
        chmod +x ./scripts/auto-fix-imports.sh
        
        # Run verification
        if ./scripts/verify-lint-checks.sh; then
          echo "‚úÖ All lint checks passed"
          echo "lint-status=passed" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Lint checks failed - attempting auto-fix"
          echo "lint-status=failed" >> $GITHUB_OUTPUT
        fi
    
    - name: Auto-fix lint issues
      if: steps.lint-check.outputs.lint-status == 'failed'
      run: |
        echo "üîß Attempting to auto-fix lint issues..."
        
        # Run auto-fix script
        if ./scripts/auto-fix-imports.sh; then
          echo "‚úÖ Auto-fix completed successfully"
          echo "fix-status=success" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Auto-fix failed"
          echo "fix-status=failed" >> $GITHUB_OUTPUT
        fi
    
    - name: Verify fixes
      if: steps.lint-check.outputs.lint-status == 'failed'
      run: |
        echo "üîç Verifying auto-fixes..."
        
        if ./scripts/verify-lint-checks.sh; then
          echo "‚úÖ All lint checks now pass after auto-fix"
          echo "verification-status=passed" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Lint checks still fail after auto-fix"
          echo "verification-status=failed" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit auto-fixes
      if: steps.lint-check.outputs.lint-status == 'failed' && steps.fix-status.outputs.fix-status == 'success' && steps.verification-status.outputs.verification-status == 'passed'
      run: |
        echo "üìù Committing auto-fixes..."
        
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add changes
        git add .
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "‚ÑπÔ∏è No changes to commit"
        else
          # Commit changes
          git commit -m "üîß Auto-fix: Resolve lint and formatting issues

          - Fixed import sorting with isort
          - Fixed code formatting with black
          - Applied consistent formatting rules
          
          Auto-generated by pre-lint-check workflow"
          
          # Push changes
          git push
          
          echo "‚úÖ Auto-fixes committed and pushed"
        fi
    
    - name: Create issue for unfixable issues
      if: steps.lint-check.outputs.lint-status == 'failed' && (steps.fix-status.outputs.fix-status == 'failed' || steps.verification-status.outputs.verification-status == 'failed')
      uses: actions/github-script@v7
      with:
        script: |
          const title = `üîß Lint Issues Require Manual Fix - ${context.sha.substring(0, 7)}`;
          const body = `## Lint Issues Detected
          
          The pre-lint check workflow detected lint issues that could not be automatically fixed.
          
          ### Details
          - **Commit**: ${context.sha}
          - **Branch**: ${context.ref}
          - **Workflow**: ${context.workflow}
          - **Run ID**: ${context.runId}
          
          ### Next Steps
          1. Review the lint check results in the workflow logs
          2. Fix the remaining issues manually
          3. Re-run the workflow to verify fixes
          
          ### Auto-fix Status
          - **Initial Check**: Failed
          - **Auto-fix Attempt**: ${process.env.FIX_STATUS || 'Unknown'}
          - **Verification**: ${process.env.VERIFICATION_STATUS || 'Unknown'}
          
          Please address these issues to ensure code quality standards are met.`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'lint', 'auto-generated']
          });
    
    - name: Comment on PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const lintStatus = '${{ steps.lint-check.outputs.lint-status }}';
          const fixStatus = '${{ steps.fix-status.outputs.fix-status }}';
          const verificationStatus = '${{ steps.verification-status.outputs.verification-status }}';
          
          let comment = `## üîç Pre-Lint Check Results
          
          ### Status: ${lintStatus === 'passed' ? '‚úÖ PASSED' : '‚ùå FAILED'}
          
          `;
          
          if (lintStatus === 'passed') {
            comment += `üéâ All lint checks passed! Your code is ready for the main CI pipeline.`;
          } else {
            comment += `### Auto-Fix Results:
            - **Auto-fix Status**: ${fixStatus || 'Not attempted'}
            - **Verification Status**: ${verificationStatus || 'Not verified'}
            
            `;
            
            if (fixStatus === 'success' && verificationStatus === 'passed') {
              comment += `‚úÖ **Auto-fixes applied successfully!** The issues have been automatically resolved and committed.`;
            } else {
              comment += `‚ö†Ô∏è **Manual intervention required.** Some lint issues could not be automatically fixed. Please review the workflow logs and fix the remaining issues manually.`;
            }
          }
          
          comment += `
          
          ---
          *This comment was automatically generated by the pre-lint-check workflow.*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # Notify main CI about pre-lint status
  notify-main-ci:
    runs-on: ubuntu-latest
    needs: [changes, pre-lint-verification]
    if: always() && (needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true')
    
    steps:
    - name: Set pre-lint status
      run: |
        if [ "${{ needs.pre-lint-verification.result }}" == "success" ]; then
          echo "‚úÖ Pre-lint check passed - main CI can proceed"
        else
          echo "‚ùå Pre-lint check failed - main CI may encounter issues"
        fi
