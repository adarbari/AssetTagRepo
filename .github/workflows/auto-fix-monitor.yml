name: Auto-Fix Monitor

on:
  workflow_run:
    workflows: ["Backend CI", "Frontend CI"]
    types: [completed]

jobs:
  analyze-failures:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Download workflow logs
      uses: actions/download-artifact@v4
      with:
        name: workflow-logs
        path: ./logs
    
    - name: Analyze common errors
      run: |
        echo "Analyzing workflow failure..."
        
        # Check for common dependency issues
        if grep -q "email-validator is not installed" ./logs/*.log 2>/dev/null; then
          echo "DEPENDENCY_ERROR=email-validator" >> $GITHUB_ENV
          echo "ERROR_TYPE=dependency" >> $GITHUB_ENV
        fi
        
        if grep -q "ModuleNotFoundError" ./logs/*.log 2>/dev/null; then
          echo "DEPENDENCY_ERROR=missing_module" >> $GITHUB_ENV
          echo "ERROR_TYPE=dependency" >> $GITHUB_ENV
        fi
        
        if grep -q "ImportError" ./logs/*.log 2>/dev/null; then
          echo "DEPENDENCY_ERROR=import_error" >> $GITHUB_ENV
          echo "ERROR_TYPE=dependency" >> $GITHUB_ENV
        fi
    
    - name: Create issue for dependency errors
      if: env.ERROR_TYPE == 'dependency'
      uses: actions/github-script@v7
      with:
        script: |
          const errorType = process.env.ERROR_TYPE;
          const dependencyError = process.env.DEPENDENCY_ERROR;
          
          const title = `ðŸš¨ Auto-detected CI Failure: ${dependencyError}`;
          const body = `
          ## Automated Error Detection
          
          **Error Type:** ${errorType}
          **Specific Error:** ${dependencyError}
          **Workflow:** ${{ github.event.workflow_run.name }}
          **Commit:** ${{ github.event.workflow_run.head_sha }}
          
          ## Suggested Actions
          
          ${dependencyError === 'email-validator' ? 
            '1. Add `email-validator` to requirements.txt\n2. Run `pip install email-validator`' :
            '1. Check missing dependencies\n2. Update requirements files'
          }
          
          ## Workflow Details
          - **Run ID:** ${{ github.event.workflow_run.id }}
          - **URL:** ${{ github.event.workflow_run.html_url }}
          - **Triggered by:** ${{ github.event.workflow_run.triggering_actor.login }}
          
          ---
          *This issue was automatically created by the Auto-Fix Monitor*
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'ci-failure', 'auto-detected']
          });
    
    - name: Comment on PR if applicable
      if: github.event.workflow_run.pull_requests.length > 0
      uses: actions/github-script@v7
      with:
        script: |
          const errorType = process.env.ERROR_TYPE;
          const dependencyError = process.env.DEPENDENCY_ERROR;
          
          if (errorType === 'dependency') {
            const comment = `
            ## ðŸš¨ CI Failure Detected
            
            **Error:** ${dependencyError}
            
            ${dependencyError === 'email-validator' ? 
              '**Quick Fix:** Add \`email-validator\` to your requirements.txt' :
              '**Action Needed:** Check for missing dependencies'
            }
            
            [View full logs](${{ github.event.workflow_run.html_url }})
            `;
            
            const pr = context.payload.workflow_run.pull_requests[0];
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment
            });
          }
